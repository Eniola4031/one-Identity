import type { Web5Crypto } from '../../types/web5-crypto.js';
import type { JwkOperation, PrivateKeyJwk, PublicKeyJwk } from '../../jose.js';
import { BaseEllipticCurveAlgorithm } from './base.js';
export declare abstract class BaseEdDsaAlgorithm extends BaseEllipticCurveAlgorithm {
    readonly keyOperations: JwkOperation[];
    checkSignOptions(options: {
        algorithm: Web5Crypto.EcdsaOptions;
        key: PrivateKeyJwk;
        data: Uint8Array;
    }): void;
    checkVerifyOptions(options: {
        algorithm: Web5Crypto.EcdsaOptions;
        key: PublicKeyJwk;
        signature: Uint8Array;
        data: Uint8Array;
    }): void;
    deriveBits(): Promise<Uint8Array>;
    abstract sign(options: {
        algorithm: Web5Crypto.EdDsaOptions;
        key: PrivateKeyJwk;
        data: Uint8Array;
    }): Promise<Uint8Array>;
    abstract verify(options: {
        algorithm: Web5Crypto.EdDsaOptions;
        key: PublicKeyJwk;
        signature: Uint8Array;
        data: Uint8Array;
    }): Promise<boolean>;
}
//# sourceMappingURL=eddsa.d.ts.map