import type { Web5Crypto } from '../../types/web5-crypto.js';
import type { JwkOperation, PrivateKeyJwk, PublicKeyJwk } from '../../jose.js';
import { CryptoAlgorithm } from '../crypto-algorithm.js';
export declare abstract class BaseEllipticCurveAlgorithm extends CryptoAlgorithm {
    abstract readonly curves: ReadonlyArray<string>;
    checkGenerateKeyOptions(options: {
        algorithm: Web5Crypto.EcGenerateKeyOptions;
        keyOperations?: JwkOperation[];
    }): void;
    checkSignOptions(options: {
        algorithm: Web5Crypto.EcdsaOptions;
        key: PrivateKeyJwk;
        data: Uint8Array;
    }): void;
    checkVerifyOptions(options: {
        algorithm: Web5Crypto.EcdsaOptions;
        key: PublicKeyJwk;
        signature: Uint8Array;
        data: Uint8Array;
    }): void;
    decrypt(): Promise<Uint8Array>;
    encrypt(): Promise<Uint8Array>;
    abstract generateKey(options: {
        algorithm: Web5Crypto.EcGenerateKeyOptions;
        keyOperations?: JwkOperation[];
    }): Promise<PrivateKeyJwk>;
}
//# sourceMappingURL=base.d.ts.map