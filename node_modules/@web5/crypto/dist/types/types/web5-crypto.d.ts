import type { PublicKeyJwk } from '../jose.js';
export declare namespace Web5Crypto {
    interface AesCtrOptions extends Algorithm {
        counter: Uint8Array;
        length: number;
    }
    interface AesGenerateKeyOptions extends Algorithm {
    }
    interface AesGcmOptions extends Algorithm {
        additionalData?: Uint8Array;
        iv: Uint8Array;
        tagLength?: number;
    }
    interface Algorithm {
        name: string;
    }
    type AlgorithmIdentifier = Algorithm;
    interface EcdsaOptions extends Algorithm {
    }
    interface EcGenerateKeyOptions extends Algorithm {
        curve: NamedCurve;
    }
    interface EcdhDeriveKeyOptions extends Algorithm {
        publicKey: PublicKeyJwk;
    }
    interface EcdsaGenerateKeyOptions extends EcGenerateKeyOptions {
    }
    type EdDsaGenerateKeyOptions = EcGenerateKeyOptions;
    type EdDsaOptions = Algorithm;
    type GenerateKeyOptions = AesGenerateKeyOptions | EcGenerateKeyOptions | HmacGenerateKeyOptions;
    interface HmacGenerateKeyOptions extends Algorithm {
        hash: AlgorithmIdentifier;
        length?: number;
    }
    interface KeyAlgorithm {
        name: string;
    }
    type KeyFormat = 'jwk' | 'pkcs8' | 'raw' | 'spki';
    type NamedCurve = string;
    interface Pbkdf2Options extends Algorithm {
        hash: string;
        iterations: number;
        salt: Uint8Array;
    }
}
//# sourceMappingURL=web5-crypto.d.ts.map