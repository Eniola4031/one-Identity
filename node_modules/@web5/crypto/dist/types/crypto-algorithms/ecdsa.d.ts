import type { Web5Crypto } from '../types/web5-crypto.js';
import type { JwkOperation, PrivateKeyJwk, PublicKeyJwk } from '../jose.js';
import { BaseEcdsaAlgorithm } from '../algorithms-api/index.js';
export declare class EcdsaAlgorithm extends BaseEcdsaAlgorithm {
    readonly names: readonly ["ES256K"];
    readonly curves: readonly ["secp256k1"];
    generateKey(options: {
        algorithm: Web5Crypto.EcdsaGenerateKeyOptions;
        keyOperations?: JwkOperation[];
    }): Promise<PrivateKeyJwk>;
    sign(options: {
        algorithm: Web5Crypto.EcdsaOptions;
        key: PrivateKeyJwk;
        data: Uint8Array;
    }): Promise<Uint8Array>;
    verify(options: {
        algorithm: Web5Crypto.EcdsaOptions;
        key: PublicKeyJwk;
        signature: Uint8Array;
        data: Uint8Array;
    }): Promise<boolean>;
}
//# sourceMappingURL=ecdsa.d.ts.map